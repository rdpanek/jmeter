apiVersion: v1
kind: Service
metadata:
  labels:
    app: controller
  name: controller
spec:
  clusterIP: None
  ports:
  - name: rmi
    port: 55512
    protocol: TCP
    targetPort: 55512
  - name: vnc
    port: 5901
    protocol: TCP
    targetPort: 5901
  selector:
    app: controller
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: generator
  name: generator
spec:
  clusterIP: None
  ports:
  - name: rmi-registry
    port: 1099
    protocol: TCP
    targetPort: 1099
  - name: rmi-localport
    port: 5001
    protocol: TCP
    targetPort: 5001
  selector:
    app: generator
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: generator
spec:
  selector:
    matchLabels:
      app: generator
  serviceName: "generator"
  replicas: 2
  podManagementPolicy: "Parallel"
  template:
    metadata:
      labels:
        app: generator
        test: load
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: "In"
                  values: [ "generator", "controller" ]
            topologyKey: "kubernetes.io/hostname"
      hostname: generator
      containers:
      - name: generator
        image: 946791837062.dkr.ecr.eu-central-1.amazonaws.com/perftest/smartmeter:5.3.0
        ports:
          # server port rmi registry
          - containerPort: 1099
          # server rmi local port
          - containerPort: 5001
        env:
        - name: Xmx
          value: "10g"
        - name: SERVER_PORT_RMI_REGISTRY
          value: "1099"
        - name: SERVER_RMI_LOCALPORT
          value:  "5001"
        resources:
          requests:
            memory: "10Gi"
            cpu: "3"
          limits:
            memory: "10Gi"
            cpu: "4"
        imagePullPolicy: "IfNotPresent"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: controller
spec:
  selector:
    matchLabels:
      app: controller
  serviceName: "controller"
  replicas: 1
  template:
    metadata:
      labels:
        app: controller
        test: load
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: "In"
                  values: [ "generator" ]
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: controller
        image: 946791837062.dkr.ecr.eu-central-1.amazonaws.com/perftest/smartmeter:vnc-5.3.0
        ports:
        #client rmi local port
        - containerPort: 55512
        #dataserver master local port
        - containerPort: 9080
        env:
        - name: VNC_RESOLUTION
          value: "1920x1080"
        - name: VNC_PW
          value: "secret"
        - name: GIT_REVISION
          value: "89b3fb7"
        - name: GIT_TESTS_PATH
          valueFrom:
            configMapKeyRef:
              name: smartmeter
              key: repository.path
        - name: GIT_TESTS
          valueFrom:
            configMapKeyRef:
              name: smartmeter
              key: repository
        - name: GIT_HOST
          valueFrom:
            configMapKeyRef:
              name: smartmeter
              key: repository.host
        - name: GIT_PORT
          valueFrom:
            configMapKeyRef:
              name: smartmeter
              key: repository.port
        - name: INTERNAL_PROXY
          valueFrom:
            configMapKeyRef:
              name: smartmeter
              key: internal.proxy
        - name: INTERNAL_PROXY_PORT
          valueFrom:
            configMapKeyRef:
              name: smartmeter
              key: internal.proxy.port
        resources:
          requests:
            memory: "10Gi"
            cpu: "3"
          limits:
            memory: "10Gi"
            cpu: "4"
        imagePullPolicy: "Always"
      initContainers:
      - name: wait-for-generators
        image: openshift/base-centos7
        command: ['/bin/bash', '-c', 'for i in {0..1}; do echo "generator-${i}.generator"; if ping -c 1 generator-${i}.generator &> /dev/null; then echo "exist"; else echo "no"; exit 1; fi; done;']
